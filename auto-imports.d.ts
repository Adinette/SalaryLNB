/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {

}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, Slot, Slots, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, ShallowRef, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { AppUtils } from './src/utils/index'
  import('./src/utils/index')
  // @ts-ignore
  export type { AppLogger } from './src/utils/logger'
  import('./src/utils/logger')
  // @ts-ignore
  export type { RoutesByPrefix, RoutesInterface } from './src/utils/routes'
  import('./src/utils/routes')
  // @ts-ignore
  export type { ApiResourceModel } from './src/models/ApiResourceModel'
  import('./src/models/ApiResourceModel')
  // @ts-ignore
  export type { GlobalStore } from './src/stores/global/index'
  import('./src/stores/global/index')
  // @ts-ignore
  export type { MachineStore } from './src/modules/machine/store/index'
  import('./src/modules/machine/store/index')
  // @ts-ignore
  export type { OperatorStore } from './src/modules/operator/store/index'
  import('./src/modules/operator/store/index')
  // @ts-ignore
  export type { PermissionStore } from './src/modules/permissions/store/index'
  import('./src/modules/permissions/store/index')
  // @ts-ignore
  export type { UserStore } from './src/modules/users/store/index'
  import('./src/modules/users/store/index')
  // @ts-ignore
  export type { ApplicationInterface } from './src/modules/applications/interfaces/application_interface'
  import('./src/modules/applications/interfaces/application_interface')
  // @ts-ignore
  export type { ApplicationStoreInterface } from './src/modules/applications/interfaces/application_store_interface'
  import('./src/modules/applications/interfaces/application_store_interface')
  // @ts-ignore
  export type { ForgotPasswordInterface } from './src/modules/authentication/interfaces/forgot_password_interface'
  import('./src/modules/authentication/interfaces/forgot_password_interface')
  // @ts-ignore
  export type { LoginInterface } from './src/modules/authentication/interfaces/login_interface'
  import('./src/modules/authentication/interfaces/login_interface')
  // @ts-ignore
  export type { ResetPasswordInterface } from './src/modules/authentication/interfaces/reset_password_interface'
  import('./src/modules/authentication/interfaces/reset_password_interface')
  // @ts-ignore
  export type { SessionInterface } from './src/modules/authentication/interfaces/session_interface'
  import('./src/modules/authentication/interfaces/session_interface')
  // @ts-ignore
  export type { MachineInterface } from './src/modules/machine/interfaces/machine_interface'
  import('./src/modules/machine/interfaces/machine_interface')
  // @ts-ignore
  export type { MachineCreateInterface } from './src/modules/machine/interfaces/machine_create_interface'
  import('./src/modules/machine/interfaces/machine_create_interface')
  // @ts-ignore
  export type { MachineUpdateInterface } from './src/modules/machine/interfaces/machine_update_interface'
  import('./src/modules/machine/interfaces/machine_update_interface')
  // @ts-ignore
  export type { MachineStoreInterface } from './src/modules/machine/interfaces/machine_store_interface'
  import('./src/modules/machine/interfaces/machine_store_interface')
  // @ts-ignore
  export type { OperatorInterface } from './src/modules/operator/interfaces/operator_interface'
  import('./src/modules/operator/interfaces/operator_interface')
  // @ts-ignore
  export type { OperatorCreateInterface } from './src/modules/operator/interfaces/operator_create_interface'
  import('./src/modules/operator/interfaces/operator_create_interface')
  // @ts-ignore
  export type { OperatorUpdateInterface } from './src/modules/operator/interfaces/operator_update_interface'
  import('./src/modules/operator/interfaces/operator_update_interface')
  // @ts-ignore
  export type { OperatorStoreInterface } from './src/modules/operator/interfaces/operator_store_interface'
  import('./src/modules/operator/interfaces/operator_store_interface')
  // @ts-ignore
  export type { OperatorSalaryInterface } from './src/modules/operator/interfaces/operator_salary_interface'
  import('./src/modules/operator/interfaces/operator_salary_interface')
  // @ts-ignore
  export type { PermissionCreateInterface } from './src/modules/permissions/interfaces/permission_create_interface'
  import('./src/modules/permissions/interfaces/permission_create_interface')
  // @ts-ignore
  export type { PermissionInterface } from './src/modules/permissions/interfaces/permission_interface'
  import('./src/modules/permissions/interfaces/permission_interface')
  // @ts-ignore
  export type { PermissionStoreInterface } from './src/modules/permissions/interfaces/permission_store_interface'
  import('./src/modules/permissions/interfaces/permission_store_interface')
  // @ts-ignore
  export type { PermissionUpdateInterface } from './src/modules/permissions/interfaces/permission_update_interface'
  import('./src/modules/permissions/interfaces/permission_update_interface')
  // @ts-ignore
  export type { UserInterface } from './src/modules/users/interfaces/user_interface'
  import('./src/modules/users/interfaces/user_interface')
  // @ts-ignore
  export type { UserCreateInterface } from './src/modules/users/interfaces/user_create_interface'
  import('./src/modules/users/interfaces/user_create_interface')
  // @ts-ignore
  export type { UserUpdateInterface } from './src/modules/users/interfaces/user_update_interface'
  import('./src/modules/users/interfaces/user_update_interface')
  // @ts-ignore
  export type { UserStoreInterface } from './src/modules/users/interfaces/user_store_interface'
  import('./src/modules/users/interfaces/user_store_interface')
  // @ts-ignore
  export type { UserListFilterInterface } from './src/modules/users/interfaces/user_list_filter_interface'
  import('./src/modules/users/interfaces/user_list_filter_interface')
  // @ts-ignore
  export type { ApplicationModel } from './src/modules/applications/models/application_model'
  import('./src/modules/applications/models/application_model')
  // @ts-ignore
  export type { SessionModel } from './src/modules/authentication/login/models/session_model'
  import('./src/modules/authentication/login/models/session_model')
  // @ts-ignore
  export type { SessionModel } from './src/modules/authentication/models/session_model'
  import('./src/modules/authentication/models/session_model')
  // @ts-ignore
  export type { MachineModel } from './src/modules/machine/models/machine-model'
  import('./src/modules/machine/models/machine-model')
  // @ts-ignore
  export type { OperatorModel } from './src/modules/operator/models/operator-model'
  import('./src/modules/operator/models/operator-model')
  // @ts-ignore
  export type { OperatorSalaryModel } from './src/modules/operator/models/operator-salary-model'
  import('./src/modules/operator/models/operator-salary-model')
  // @ts-ignore
  export type { PermissionModel } from './src/modules/permissions/models/permission_model'
  import('./src/modules/permissions/models/permission_model')
  // @ts-ignore
  export type { UserModel } from './src/modules/users/models/user_model'
  import('./src/modules/users/models/user_model')
  // @ts-ignore
  export type { ListApiArgsInterface } from './src/api/interfaces/list_api_args_interface'
  import('./src/api/interfaces/list_api_args_interface')
  // @ts-ignore
  export type { ApiResourceInterface } from './src/interfaces/ApiResourceInterface'
  import('./src/interfaces/ApiResourceInterface')
  // @ts-ignore
  export type { AppAlertType, AppAlertInterface } from './src/interfaces/AppAlertInterface'
  import('./src/interfaces/AppAlertInterface')
  // @ts-ignore
  export type { AppStoreDefinition } from './src/interfaces/app_store_definition_interface'
  import('./src/interfaces/app_store_definition_interface')
  // @ts-ignore
  export type { AppLocalStorage } from './src/services/AppLocalStorage'
  import('./src/services/AppLocalStorage')
  // @ts-ignore
  export type { AppSessionStorage } from './src/services/AppSessionStorage'
  import('./src/services/AppSessionStorage')
  // @ts-ignore
  export type { AppIndexedDBStorage } from './src/services/app_indexed_db_storage'
  import('./src/services/app_indexed_db_storage')
  // @ts-ignore
  export type { AppStorageService, AppStorageOptions } from './src/services/app_storage_service'
  import('./src/services/app_storage_service')
  // @ts-ignore
  export type { GenericStoreService, GenericStoreOptions } from './src/services/generic_store_service'
  import('./src/services/generic_store_service')
  // @ts-ignore
  export type { AppIndexedDBService } from './src/services/indexed_db'
  import('./src/services/indexed_db')
  // @ts-ignore
  export type { AppStoresInterface } from './src/stores/interfaces/app_stores_interface'
  import('./src/stores/interfaces/app_stores_interface')
  // @ts-ignore
  export type { GlobalStoreInterface } from './src/stores/interfaces/global_store_interface'
  import('./src/stores/interfaces/global_store_interface')
  // @ts-ignore
  export type { StoreInterface } from './src/stores/interfaces/store_interface'
  import('./src/stores/interfaces/store_interface')
  // @ts-ignore
  export type { TemplateSettingsInterface } from './src/stores/interfaces/template_settings_interface'
  import('./src/stores/interfaces/template_settings_interface')
}

// for vue template auto import
type UnwrapRefs<T> = {
  [K in keyof T]: import('vue').UnwrapRef<T[K]>
}
namespace _ComponentCustomProperties {
  const { ApiResourceModel }: typeof import('./src/models/ApiResourceModel')
  const { ApiRouteInterface }: typeof import('./src/api/interfaces/index')
  const { AppIndexedDBService }: typeof import('./src/services/indexed_db')
  const { AppIndexedDBStorage, default: appIndexedDbStorage }: typeof import('./src/services/app_indexed_db_storage')
  const { AppLogger, appLogger, createLogger }: typeof import('./src/utils/logger')
  const { AppStorageService }: typeof import('./src/services/app_storage_service')
  const { AppUtils }: typeof import('./src/utils/index')
  const { ApplicationModel }: typeof import('./src/modules/applications/models/application_model')
  const { DateTime, luxonFormats }: typeof import('./src/utils/luxon')
  const { EffectScope, computed, createApp, customRef, defineAsyncComponent, defineComponent, effectScope, getCurrentInstance, getCurrentScope, getCurrentWatcher, h, inject, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onScopeDispose, onServerPrefetch, onUnmounted, onUpdated, onWatcherCleanup, provide, reactive, readonly, ref, resolveComponent, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, toValue, triggerRef, unref, useAttrs, useCssModule, useCssVars, useId, useModel, useSlots, useTemplateRef, watch, watchEffect, watchPostEffect, watchSyncEffect }: typeof import('vue')
  const { GenericStoreService }: typeof import('./src/services/generic_store_service')
  const { MachineModel }: typeof import('./src/modules/machine/models/machine-model')
  const { OperatorModel }: typeof import('./src/modules/operator/models/operator-model')
  const { OperatorSalaryModel }: typeof import('./src/modules/operator/models/operator-salary-model')
  const { PermissionModel }: typeof import('./src/modules/permissions/models/permission_model')
  const { SessionModel }: typeof import('./src/modules/authentication/models/session_model')
  const { UserModel }: typeof import('./src/modules/users/models/user_model')
  const { acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, storeToRefs }: typeof import('pinia')
  const { appRoutes, default: routes, guestRoutes }: typeof import('./src/router/routes')
  const { asyncComputed, autoResetRef, computedAsync, computedEager, computedInject, computedWithControl, controlledComputed, controlledRef, createEventHook, createGlobalState, createInjectionState, createReactiveFn, createRef, createReusableTemplate, createSharedComposable, createTemplatePromise, createUnrefFn, debouncedRef, debouncedWatch, eagerComputed, extendRef, ignorableWatch, injectLocal, isDefined, makeDestructurable, onClickOutside, onElementRemoval, onKeyStroke, onLongPress, onStartTyping, pausableWatch, provideLocal, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, syncRef, syncRefs, templateRef, throttledRef, throttledWatch, toReactive, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, unrefElement, until, useActiveElement, useAnimate, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useClipboardItems, useCloned, useColorMode, useConfirmDialog, useCountdown, useCounter, useCssVar, useCurrentElement, useCycleList, useDark, useDateFormat, useDebounce, useDebounceFn, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useInterval, useIntervalFn, useKeyModifier, useLastChanged, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePreferredReducedTransparency, usePrevious, useRafFn, useRefHistory, useResizeObserver, useSSRWidth, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottle, useThrottleFn, useThrottledRefHistory, useTimeAgo, useTimeAgoIntl, useTimeout, useTimeoutFn, useTimeoutPoll, useTimestamp, useTitle, useToNumber, useToString, useToggle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever }: typeof import('@vueuse/core')
  const { createGenericProjection, createProjection, logicAnd, logicNot, logicOr, useAbs, useAverage, useCeil, useClamp, useFloor, useMath, useMax, useMin, usePrecision, useProjection, useRound, useSum, useTrunc }: typeof import('@vueuse/math')
  const { createRoutes, validateRoutes }: typeof import('./src/utils/routes')
  const { default: AppLocalStorage }: typeof import('./src/services/AppLocalStorage')
  const { default: AppSessionStorage }: typeof import('./src/services/AppSessionStorage')
  const { default: apiRouteInterface }: typeof import('./src/api/interfaces/api_route_interface')
  const { default: router }: typeof import('./src/router/index')
  const { default: sessionInterface }: typeof import('./src/modules/authentication/login/interfaces/session_interface')
  const { default: sessionModel }: typeof import('./src/modules/authentication/login/models/session_model')
  const { default: starter }: typeof import('./src/router/starter')
  const { extractMonthAndYear }: typeof import('./src/utils/formatDate')
  const { formatPhoneWithSpaces, removeWhitespace }: typeof import('./src/utils/remove_white_space')
  const { globalStoreDefinition }: typeof import('./src/stores/global/definition')
  const { hexToRgba }: typeof import('./src/utils/hex_to_rgba')
  const { machineStoreDefinition }: typeof import('./src/modules/machine/store/definition')
  const { numberFormatter }: typeof import('./src/utils/number_formatter')
  const { operatorStoreDefinition }: typeof import('./src/modules/operator/store/definition')
  const { permissionStoreDefinition, useInitializedPermissionStore }: typeof import('./src/modules/permissions/store/index')
  const { registerPlugins }: typeof import('./src/utils/plugins')
  const { showAlert }: typeof import('./src/utils/show_alert')
  const { toast }: typeof import('./src/utils/toast')
  const { useGlobalStore, useInitializedGlobalStore }: typeof import('./src/stores/global/index')
  const { useI18n }: typeof import('vue-i18n')
  const { useInitializedMachineStore }: typeof import('./src/modules/machine/store/index')
  const { useInitializedOperatorStore }: typeof import('./src/modules/operator/store/index')
  const { useInitializedUserStore }: typeof import('./src/modules/users/store/index')
  const { userStoreDefinition }: typeof import('./src/modules/users/store/definition')
}
declare module 'vue' {
  interface ComponentCustomProperties extends UnwrapRefs<typeof _ComponentCustomProperties> {}
}